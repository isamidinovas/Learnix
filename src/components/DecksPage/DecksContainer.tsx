import React, { useEffect, useState } from "react";
import { NavLink } from "react-router-dom";
import { getDecks } from "../../store/thunks/deckThunk";

import { useAppDispatch, useAppSelector } from "../../hooks/hooks";
import FlashCard from "../FlashCardsPage/FlashCard";

const categories = [
  { name: "–ë–∞–∞—Ä—ã", color: "text-blue-600", icon: "üìò" },
  { name: "–•–∏–º–∏—è", color: "text-orange-500", icon: "‚öóÔ∏è" },
  { name: "–§–∏–∑–∏–∫–∞", color: "text-purple-500", icon: "üî≠" },
  { name: "–ë–∏–æ–ª–æ–≥–∏—è", color: "text-green-500", icon: "üß¨" },
  { name: "–≠–∫–æ–Ω–æ–º–∏–∫–∞", color: "text-yellow-500", icon: "üí∞" },
  { name: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", color: "text-blue-400", icon: "‚àö" },
  { name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", color: "text-orange-400", icon: "üíª" },
  { name: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", color: "text-indigo-600", icon: "üß†" },
];

export const DecksContainer: React.FC = () => {
  const [selectedCategory, setSelectedCategory] = useState("–ë–∞–∞—Ä—ã");
  const dispatch = useAppDispatch();
  const { decks, loading, error } = useAppSelector((state) => state.decks);
  useEffect(() => {
    dispatch(getDecks());
  }, []);

  return (
    <div className="p-6">
      {/* Search and stats */}
      <div className="bg-purple-100 p-6 rounded-xl mb-8 flex flex-col lg:flex-row lg:items-center justify-between gap-4">
        <div className="w-full">
          <h1 className="text-2xl font-bold mb-4">
            –ö–∞–∞–ª–∞–≥–∞–Ω —Ç–µ–º–∞ –±–æ—é–Ω—á–∞ –∫–∞—Ä—Ç–æ—á–∫–∞–ª–∞—Ä–¥—ã —Ç–∞–ø
          </h1>
          <input
            type="text"
            placeholder="–ö–∞—Ä—Ç–æ—á–∫–∞–ª–∞—Ä–¥—ã –∏–∑–¥–µ..."
            className="w-full p-3 rounded-full border border-purple-300 focus:outline-none"
          />
        </div>
        <div className="flex gap-2">
          <button className="bg-white px-4 py-2 rounded-lg text-sm flex items-center gap-2 shadow">
            üî• <span>–ö“Ø–Ω–¥”©—Ä–¥“Ø–Ω —Å–µ—Ä–∏—è—Å—ã</span>
          </button>
          <button className="bg-white px-4 py-2 rounded-lg text-sm flex items-center gap-2 shadow">
            üìÖ <span>–ê–∫—Ç–∏–≤ –∫“Ø–Ω</span>
          </button>
          <button className="bg-white px-4 py-2 rounded-lg text-sm flex items-center gap-2 shadow">
            üìç <span>–£–∑—É–Ω —Å–µ—Ä–∏—è</span>
          </button>
        </div>
      </div>

      {/* Deck control */}
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-xl font-semibold">–°–∏–∑–¥–∏–Ω –∫–∞—Ä—Ç–æ—á–∫–∞–ª–∞—Ä—ã“£—ã–∑</h2>
        <div className="flex gap-2">
          <button className="bg-gray-100 text-gray-600 px-4 py-2 rounded-md text-sm">
            ‚úèÔ∏è –¢“Ø–∑”©—Ç“Ø“Ø
          </button>
          <NavLink
            to="/decks/create"
            className="bg-blue-100 text-blue-700 px-4 py-2 rounded-md text-sm"
          >
            ‚ûï –ñ–∞“£—ã
          </NavLink>
          <button className="bg-blue-200 text-blue-800 px-4 py-2 rounded-md text-sm">
            üì• –ò–º–ø–æ—Ä—Ç –∫–∞—Ä—Ç–æ—á–∫–∞–ª–∞—Ä
          </button>
        </div>
      </div>

      <div className="text-gray-500 mb-8">
        –ë–∏—Ä–∏–Ω—á–∏ –∫–∞—Ä—Ç–æ—á–∫–∞“£—ã–∑–¥—ã –∫–æ—à—É“£—É–∑ –∂–∞–Ω–∞ –º–∞—à—ã–∫–∫—ã–ª–∞ –±–∞—à—Ç–∞“£—ã–∑.
      </div>

      {/* Categories */}
      <h2 className="text-xl font-semibold mb-4">–ü–æ–ø—É–ª—è—Ä–¥—É—É —Ç–æ–ø—Ç–æ–º–¥–æ—Ä</h2>

      <div className="flex flex-wrap gap-4 mb-6">
        {categories.map((cat) => (
          <button
            key={cat.name}
            onClick={() => setSelectedCategory(cat.name)}
            className={`flex items-center gap-2 px-4 py-2 rounded-full border ${
              selectedCategory === cat.name
                ? "bg-purple-600 text-white"
                : "bg-white text-gray-700 hover:bg-purple-100"
            }`}
          >
            <span>{cat.icon}</span>
            <span className="font-medium">{cat.name}</span>
          </button>
        ))}
      </div>
      {/* {decks && <FlashCard decks={decks} selectedCategory={selectedCategory} />} */}
      {decks && <FlashCard decks={decks} selectedCategory={selectedCategory} />}
    </div>
  );
};
export default DecksContainer;
