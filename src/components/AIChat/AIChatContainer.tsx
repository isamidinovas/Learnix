import React, { useState } from "react";
import ChatHistory from "./ChatHistory";
import { Folder } from "lucide-react";
// import { format } from "date-fns";

interface ChatMessage {
  id: string;
  content: string;
  sender: "user" | "ai";
  timestamp: Date;
  attachments?: Array<{
    type: "image" | "file";
    url: string;
    name: string;
  }>;
}

interface ChatHistory {
  id: string;
  title: string;
  lastMessage: string;
  timestamp: Date;
  messages: ChatMessage[];
}

interface SuggestedQuestion {
  id: string;
  text: string;
  icon?: string;
}

const suggestedQuestions: SuggestedQuestion[] = [
  {
    id: "1",
    text: "–≠–≥–µ—Ä–¥–µ —Ç–µ–ø–∫–∏—á—Ç–∏–Ω –Ω–µ–≥–∏–∑–∏ –¥—É–±–∞–ª–¥–∞–Ω 6 –º–µ—Ç—Ä –∞–ª—ã—Å—Ç—ã–∫—Ç–∞ –∂–∞–π–≥–∞—à–∫–∞–Ω –±–æ–ª—Å–æ, –¥—É–±–∞–ª –±–æ—é–Ω—á–∞ 8 –º–µ—Ç—Ä –±–∏–π–∏–∫—Ç–∏–∫–∫–µ –∂–µ—Ç–∫–µ–Ω —Ç–µ–ø–∫–∏—á—Ç–∏–Ω —É–∑—É–Ω–¥—É–≥—É –∫–∞–Ω—á–∞?",
    icon: "üí°",
  },
  {
    id: "2",
    text: "–ü–∏—Ñ–∞–≥–æ—Ä–¥—É–Ω —Ç–µ–æ—Ä–µ–º–∞—Å—ã —Ç–∏–∫ –±—É—Ä—á—Ç—É—É “Ø—á –±—É—Ä—á—Ç—É–∫—Ç—É —á–µ—á“Ø“Ø–≥”© –∫–∞–Ω–¥–∞–π—á–∞ –∂–∞—Ä–¥–∞–º –±–µ—Ä–µ—Ç?",
    icon: "üí°",
  },
  {
    id: "3",
    text: "–ü–∏—Ñ–∞–≥–æ—Ä–¥—É–Ω —Ç–µ–æ—Ä–µ–º–∞—Å—ã —Ä–µ–∞–ª–¥—É—É —Ç—É—Ä–º—É—à—Ç–∞ –∫–∞–Ω–¥–∞–π –∫–æ–ª–¥–æ–Ω—É–ª–∞—Ç?",
    icon: "‚ùì",
  },
];

const AIChatContainer: React.FC = () => {
  const [chatHistories, setChatHistories] = useState<ChatHistory[]>([
    {
      id: "1",
      title: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –±–æ—é–Ω—á–∞ –∂–∞—Ä–¥–∞–º",
      lastMessage: "–ò–Ω—Ç–µ–≥—Ä–∞–ª–¥–∞—Ä –∂”©–Ω“Ø–Ω–¥”© —Å—É—Ä–æ–æ",
      timestamp: new Date(),
      messages: [],
    },
    {
      id: "2",
      title: "–§–∏–∑–∏–∫–∞ –±–æ—é–Ω—á–∞ —Ç–∞–ø—à—ã—Ä–º–∞",
      lastMessage: "–ù—å—é—Ç–æ–Ω–¥—É–Ω –∑–∞–∫–æ–Ω–¥–æ—Ä—É",
      timestamp: new Date(),
      messages: [],
    },
  ]);
  const [newMessage, setNewMessage] = useState("");
  const [attachments, setAttachments] = useState<File[]>([]);
  const [message, setMessage] = useState("");

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (files) {
      setAttachments([...attachments, ...Array.from(files)]);
    }
  };

  const handleSendMessage = () => {
    if (!newMessage.trim() && attachments.length === 0) return;

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log("Sending message:", newMessage);
    console.log("Attachments:", attachments);

    setNewMessage("");
    setAttachments([]);
  };

  return (
    <div className="max-w-4xl mx-auto px-4 py-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center gap-3 mb-6">
        <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
          <span className="text-2xl">ü§ñ</span>
        </div>
        <h1 className="text-2xl font-semibold text-gray-800">
          –ñ–∞—Å–∞–ª–º–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –º—É–≥–∞–ª–∏–º–∏–±–∏–∑ –ö–ö–Ω–∞–Ω –∫–∞–∞–ª–∞–≥–∞–Ω –Ω–µ—Ä—Å–µ –∂”©–Ω“Ø–Ω–¥”© —Å—É—Ä–∞“£—ã–∑!
        </h1>
      </div>

      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
      <div className="relative mb-6">
        <input
          type="text"
          value={message}
          onChange={(e) => setMessage(e.target.value)}
          placeholder="–ë“Ø–≥“Ø–Ω —ç–º–Ω–µ–Ω–∏ –±–∏–ª–≥–∏“£–∏–∑ –∫–µ–ª–µ—Ç?..."
          className="w-full px-4 py-3 pr-12 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
        <button className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600">
          <svg
            className="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z"
            />
          </svg>
        </button>
      </div>

      {/* –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã */}
      <div className="space-y-2">
        {suggestedQuestions.map((question) => (
          <ChatHistory key={question.id} {...question} />
        ))}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex gap-4 mt-6">
        <button className="flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
          <svg
            className="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"
            />
          </svg>
          <span>–ü—Ä–∞–∫—Ç–∏–∫–∞–ª—ã–∫ —ç–∫–∑–∞–º–µ–Ω —Ç“Ø–∑“Ø“Ø</span>
        </button>
        <button className="flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
          <svg
            className="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"
            />
          </svg>
          <span>–õ–µ–∫—Ü–∏—è –∂–∞–∑–¥—ã—Ä—É—É</span>
        </button>
      </div>

      {/* –û–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ */}
      <div className="mt-8 border-2 border-dashed border-gray-300 rounded-lg p-8">
        <div className="flex flex-col items-center text-center">
          <div className="mb-4 text-blue-600">
            <Folder size={48} className="text-yellow-700" />
          </div>
          <p className="text-gray-600">
            –ö–µ—Ä–µ–∫—Ç“Ø“Ø –∂–∞—Ä–¥–∞–º –∞–ª—É—É “Ø—á“Ø–Ω{" "}
            <span className="text-blue-600">—Å“Ø—Ä”©—Ç</span> –∂–µ{" "}
            <span className="text-blue-600">PDF</span>-—Ñ–∞–π–ª –∂“Ø–∫—Ç”©“£“Ø–∑
          </p>
          <input
            type="file"
            accept="image/*,.pdf"
            className="hidden"
            id="file-upload"
            onChange={handleFileUpload}
          />
          <label
            htmlFor="file-upload"
            className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors cursor-pointer"
          >
            –§–∞–π–ª –∂“Ø–∫—Ç”©”©
          </label>
        </div>
      </div>
    </div>
  );
};

export default AIChatContainer;
